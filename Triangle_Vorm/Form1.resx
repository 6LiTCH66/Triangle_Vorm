<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>